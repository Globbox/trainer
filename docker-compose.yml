services:
  web:
    image: ${BACKEND_IMAGE}:${BACKEND_TAG}
    restart: always
    expose:
      - 4000
    env_file:
      - .env
    depends_on:
      - db
    entrypoint: ["run_server.sh"]
    volumes:
      - static_volume:/www/static
      - ./media:/www/media
      - ./logs:/www/logs

  celery:
    image: ${BACKEND_IMAGE}:${BACKEND_TAG}
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
    entrypoint: ["run_celery.sh"]
    volumes:
      - static_volume:/www/static
      - ./media:/www/media
      - ./logs:/www/logs

  celery-beat:
    image: ${BACKEND_IMAGE}:${BACKEND_TAG}
    restart: always
    env_file:
      - .env
    depends_on:
      - celery
    entrypoint: ["run_celery_beat.sh"]
    volumes:
      - static_volume:/www/static
      - ./media:/www/media
      - ./logs:/www/logs

  redis:
    image: redis:latest
    expose:
      - "6379"

  db:
    image: mysql:8.3.0
    restart: always
    environment:
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASS
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASS
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/mysql

  nginx:
    restart: always
    build:
      context: .
      dockerfile: nginx/Dockerfile
    env_file:
      - .env
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - static_volume:/www/static
      - nginx-letsencrypt:/etc/letsencrypt
      - ./media:/www/media

volumes:
  db_data:
  logs_volume:
  static_volume:
  media_volume:
  nginx-letsencrypt: